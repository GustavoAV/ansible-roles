name: CI
on:
  pull_request:
  push:
    branches: [main]

permissions: read-all

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout the codebase (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine changed roles
        id: set-matrix
        run: |
          set -x
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            range="origin/${{ github.event.pull_request.base.ref }}...${{ github.sha }}"
            git fetch origin ${{ github.event.pull_request.base.ref }}
          else
            range="${{ github.event.before }}...${{ github.sha }}"
          fi

          changed=$(git diff --name-only $range | grep -E '^roles/[^/]+' | cut -d/ -f2 | sort -u)

          # Assembles JSON array, e.g: ["docker","test"]
          if [ -z "$changed" ]; then
            roles_json='[]'
          else
            roles_json=$(printf '%s\n' $changed | jq --raw-input . | jq --compact-output --slurp .)
          fi

          echo "matrix=$roles_json" >> $GITHUB_OUTPUT

  lint:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        role: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip

      - name: Install lint dependencies
        run: pip install ansible-lint yamllint

      - name: Run yamllint
        run: yamllint roles/${{ matrix.role }}/

      - name: Run ansible-lint
        run: ansible-lint --force-color roles/${{ matrix.role }}/

  molecule:
    needs: [generate-matrix, lint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        role: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v4

      # Fails without "requirements.txt" for some reason
      # https://github.com/marketplace/actions/build-and-setup-python#no-file-in--matched-to-requirementstxt-or-pyprojecttoml-make-sure-you-have-checked-out-the-target-repository
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip

      - name: Install Python packages
        run: pip install -r requirements.txt

      - name: Run Molecule tests
        run: cd roles/${{ matrix.role }}/ && molecule test
        env:
          # Enable colors in CI logs
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
